---
- name: "configuration play."
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600
    - os_environment:
        - key: TYPEORM_CONNECTION
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_CONNECTION')}}"
        - key: TYPEORM_ENTITIES
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_ENTITIES')}}"
        - key: TYPEORM_HOST
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_HOST')}}"
        - key: TYPEORM_PORT
          value: 5432
        - key: TYPEORM_USERNAME
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_USERNAME')}}"
        - key: TYPEORM_PASSWORD
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_PASSWORD')}}"
        - key: TYPEORM_DATABASE
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_DATABASE')}}"
        - key: TYPEORM_MIGRATIONS
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_MIGRATIONS')}}"
        - key: TYPEORM_MIGRATIONS_DIR
          value: "{{ lookup('ansible.builtin.env', 'TYPEORM_MIGRATIONS_DIR')}}"
        - key: MY_ENV_VARIABLE
          value: ansiblepilot

    - name: customize /etc/environment
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      with_items: "{{ os_environment }}"

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

  roles:
    - configure-server
    - configure-prometheus-node-exporter
